nodemon.json file config: 
{
  "watch": ["src/"],
  "ignore": ["node_modules/**/*"],
  "verbose": true,
  "exec": "ts-node ./src/server.ts",
  "delay": 1000,
  "ext": ".ts, .js"
}

###########################################

tsconfig.json file config:
{
  "compilerOptions": {
    "composite": true /* Enable constraints that allow a TypeScript project to be used with project references. */,
    "target": "ES6" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "module": "CommonJS" /* Specify what module code is generated. */,
    "outDir": "./build" /* Specify an output folder for all emitted files. */,
    "sourceMap": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
    "strict": true /* Enable all strict type-checking options. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  },
  "include": ["src/**/*.ts"],
  "exclude": ["node_modules"]
}

###########################################

package.json file config: 

{
   !!!!! don't use this settings for the project (or remove it, if exists), it can bring compile errors   "type": "module" !!!!!
  "scripts": {
    "start": "node ./build/src/server.js",
    "prepare": "husky",
    "build": "tsc",
    "lint": "eslint .",
    "lint:fix": "eslint --fix .",
    "dev": "cross-env NODE_ENV=development nodemon",
    "dev:simple": "nodemon",
    "db:migrate": "npx prisma migrate dev --name goal-reacher --create-only && npx prisma generate",
    "db:push": "npx prisma db push"
  },
  "devDependencies": {
    "@eslint/js": "^9.1.1",
    "eslint": "^9.1.1",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "husky": "^9.0.11",
    "prettier": "^3.2.5",
    "ts-node": "^10.9.2",
    "ts-node-dev": "^2.0.0",
    ....... some other packages
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.8.0"
  },
  "dependencies": {
    ..... some other packages
  },
}

###########################################

eslint.config.js file config, also need change the file extension,
because when use without 'type':'modules' will get an error, solution is - .mjs:

import globals from 'globals';
import pluginJs from '@eslint/js';
import tseslint from 'typescript-eslint';
import eslintPluginPrettierRecommended from 'eslint-plugin-prettier/recommended';

export default [
  {
    languageOptions: { globals: globals.browser },
  },
  pluginJs.configs.recommended,
  ...tseslint.configs.recommended,
  eslintPluginPrettierRecommended,
  {
    rules: {
      'no-console': ['warn', { allow: ['warn', 'error', 'info'] }],
    },
  },
  {
    ignores: ['node_modules', 'build'],
  },
];

############################################

.prettierrc file config: 
{
  "printWidth": 100,
  "singleQuote": true,
  "semi": true,
  "tabWidth": 2,
  "trailingComma": "all",
  "endOfLine": "crlf"
}



